import pytest

from genesis_blockchain_tools.crypto.formatters import (
    encode_sig, decode_sig
)

def test_decode_sig():
    signature_be = "c453a562d0f938d6c8b2fa983b322bdd65a51d7d95cad38c0eca70592527ebbeef47048c863a30aa1e9d2720b271b127157255075a45779f870a17601f550f05"
    r, s = decode_sig(bytes.fromhex(signature_be), fmt="RAW")
    assert r == 88801108080926292506819093989673271050935022558651959714771671179785677564862
    assert s == 108228248348513637772521499464343762073232667693807353634383718457970663952133

def test_encode_sig():
    r = 88801108080926292506819093989673271050935022558651959714771671179785677564862
    s = 108228248348513637772521499464343762073232667693807353634383718457970663952133
    signature_be = "c453a562d0f938d6c8b2fa983b322bdd65a51d7d95cad38c0eca70592527ebbeef47048c863a30aa1e9d2720b271b127157255075a45779f870a17601f550f05"
    sig = encode_sig(r, s, fmt='RAW', size=32).hex()
    assert len(sig) == 128
    assert sig == signature_be
    sig = encode_sig(r, s, fmt='DER').hex()
    assert len(sig) == 144
    assert sig == '3046022100c453a562d0f938d6c8b2fa983b322bdd65a51d7d95cad38c0eca70592527ebbe022100ef47048c863a30aa1e9d2720b271b127157255075a45779f870a17601f550f05'

